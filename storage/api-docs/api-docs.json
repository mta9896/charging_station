{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Swagger API Team",
            "email": "apiteam@swagger.io",
            "url": "http://swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "externalDocs": {
        "description": "find more info here",
        "url": "https://swagger.io/about"
    },
    "host": "petstore.swagger.io",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/companies": {
            "get": {
                "description": "Get paginated list of companies.",
                "operationId": "listCompanies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Companies list response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new company.",
                "operationId": "createCompany",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Company info to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create company response",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "description": "Gets a single company by id.",
                "operationId": "getSingleCompany",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the company",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a single company",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            },
            "delete": {
                "description": "Deletes a company by id.",
                "operationId": "deleteCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the company to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company deleted."
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            },
            "put": {
                "description": "Updates a company by id.",
                "operationId": "updateCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the company to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Company info to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a single company",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            }
        },
        "/stations": {
            "get": {
                "description": "Get paginated stations",
                "operationId": "listStations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stations list response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Station"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new station.",
                "operationId": "createStation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Station info to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StationCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create station response",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    }
                }
            }
        },
        "/stations/{id}": {
            "get": {
                "description": "Gets a single station by id.",
                "operationId": "getSingleStation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the station",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get single station",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    },
                    "404": {
                        "description": "Station not found"
                    }
                }
            },
            "delete": {
                "description": "Deletes a station by id.",
                "operationId": "deleteStation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the station to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Station deleted."
                    },
                    "404": {
                        "description": "Station not found"
                    }
                }
            },
            "put": {
                "description": "Updates a station by id.",
                "operationId": "updateStation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the station to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Station info to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get single station",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    },
                    "404": {
                        "description": "Station not found"
                    }
                }
            }
        },
        "companies/{id}/stations": {
            "get": {
                "description": "Gets a paginated list of all the stations in a company children tree.",
                "operationId": "getCompanyStations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the station",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stations of a company list",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                }
            }
        },
        "stations/list/point": {
            "get": {
                "description": "Returns a list of all the stations within the given radius from the given coordinates, sorted by distance.",
                "operationId": "getStationsByDistance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "radius",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "latitude of the center location",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "longitude of the center location",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stations within the radius around location",
                        "schema": {
                            "$ref": "#/definitions/Station"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Station": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "company": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "StationUpdateRequest": {
            "type": "object",
            "properties": {
                "station": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "latitude": {
                            "type": "number"
                        },
                        "longitude": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "StationCreateRequest": {
            "type": "object",
            "properties": {
                "station": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "latitude": {
                            "type": "number"
                        },
                        "longitude": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "Company": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parentCompany": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "CompanyCreateRequest": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "parentId": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "CompanyUpdateRequest": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "parentId": {
                            "type": "integer"
                        }
                    }
                }
            }
        }
    }
}
